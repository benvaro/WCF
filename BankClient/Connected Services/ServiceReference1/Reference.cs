//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BankClient.ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IBankService", CallbackContract=typeof(BankClient.ServiceReference1.IBankServiceCallback))]
    public interface IBankService {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IBankService/PutMoney")]
        void PutMoney(double money);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IBankService/PutMoney")]
        System.Threading.Tasks.Task PutMoneyAsync(double money);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBankService/GetBalance", ReplyAction="http://tempuri.org/IBankService/GetBalanceResponse")]
        double GetBalance();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBankService/GetBalance", ReplyAction="http://tempuri.org/IBankService/GetBalanceResponse")]
        System.Threading.Tasks.Task<double> GetBalanceAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBankService/IsLogIn", ReplyAction="http://tempuri.org/IBankService/IsLogInResponse")]
        bool IsLogIn(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBankService/IsLogIn", ReplyAction="http://tempuri.org/IBankService/IsLogInResponse")]
        System.Threading.Tasks.Task<bool> IsLogInAsync(string name);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IBankServiceCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IBankService/PrintInfo")]
        void PrintInfo(string str);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IBankServiceChannel : BankClient.ServiceReference1.IBankService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BankServiceClient : System.ServiceModel.DuplexClientBase<BankClient.ServiceReference1.IBankService>, BankClient.ServiceReference1.IBankService {
        
        public BankServiceClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public BankServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public BankServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public BankServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public BankServiceClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public void PutMoney(double money) {
            base.Channel.PutMoney(money);
        }
        
        public System.Threading.Tasks.Task PutMoneyAsync(double money) {
            return base.Channel.PutMoneyAsync(money);
        }
        
        public double GetBalance() {
            return base.Channel.GetBalance();
        }
        
        public System.Threading.Tasks.Task<double> GetBalanceAsync() {
            return base.Channel.GetBalanceAsync();
        }
        
        public bool IsLogIn(string name) {
            return base.Channel.IsLogIn(name);
        }
        
        public System.Threading.Tasks.Task<bool> IsLogInAsync(string name) {
            return base.Channel.IsLogInAsync(name);
        }
    }
}
