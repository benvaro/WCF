//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace StudentAsyncClient.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Student", Namespace="http://schemas.datacontract.org/2004/07/TotalMathLib")]
    [System.SerializableAttribute()]
    public partial class Student : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private StudentAsyncClient.ServiceReference1.Address addField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public StudentAsyncClient.ServiceReference1.Address add {
            get {
                return this.addField;
            }
            set {
                if ((object.ReferenceEquals(this.addField, value) != true)) {
                    this.addField = value;
                    this.RaisePropertyChanged("add");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Address", Namespace="http://schemas.datacontract.org/2004/07/TotalMathLib")]
    [System.SerializableAttribute()]
    public partial class Address : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string cityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string streetField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string city {
            get {
                return this.cityField;
            }
            set {
                if ((object.ReferenceEquals(this.cityField, value) != true)) {
                    this.cityField = value;
                    this.RaisePropertyChanged("city");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string street {
            get {
                return this.streetField;
            }
            set {
                if ((object.ReferenceEquals(this.streetField, value) != true)) {
                    this.streetField = value;
                    this.RaisePropertyChanged("street");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IStudent")]
    public interface IStudent {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStudent/AddStudent", ReplyAction="http://tempuri.org/IStudent/AddStudentResponse")]
        void AddStudent(StudentAsyncClient.ServiceReference1.Student st);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IStudent/AddStudent", ReplyAction="http://tempuri.org/IStudent/AddStudentResponse")]
        System.IAsyncResult BeginAddStudent(StudentAsyncClient.ServiceReference1.Student st, System.AsyncCallback callback, object asyncState);
        
        void EndAddStudent(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStudent/GetStudents", ReplyAction="http://tempuri.org/IStudent/GetStudentsResponse")]
        System.Collections.Generic.List<StudentAsyncClient.ServiceReference1.Student> GetStudents();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IStudent/GetStudents", ReplyAction="http://tempuri.org/IStudent/GetStudentsResponse")]
        System.IAsyncResult BeginGetStudents(System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<StudentAsyncClient.ServiceReference1.Student> EndGetStudents(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IStudentChannel : StudentAsyncClient.ServiceReference1.IStudent, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetStudentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetStudentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<StudentAsyncClient.ServiceReference1.Student> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<StudentAsyncClient.ServiceReference1.Student>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class StudentClient : System.ServiceModel.ClientBase<StudentAsyncClient.ServiceReference1.IStudent>, StudentAsyncClient.ServiceReference1.IStudent {
        
        private BeginOperationDelegate onBeginAddStudentDelegate;
        
        private EndOperationDelegate onEndAddStudentDelegate;
        
        private System.Threading.SendOrPostCallback onAddStudentCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetStudentsDelegate;
        
        private EndOperationDelegate onEndGetStudentsDelegate;
        
        private System.Threading.SendOrPostCallback onGetStudentsCompletedDelegate;
        
        public StudentClient() {
        }
        
        public StudentClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public StudentClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public StudentClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public StudentClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AddStudentCompleted;
        
        public event System.EventHandler<GetStudentsCompletedEventArgs> GetStudentsCompleted;
        
        public void AddStudent(StudentAsyncClient.ServiceReference1.Student st) {
            base.Channel.AddStudent(st);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAddStudent(StudentAsyncClient.ServiceReference1.Student st, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddStudent(st, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndAddStudent(System.IAsyncResult result) {
            base.Channel.EndAddStudent(result);
        }
        
        private System.IAsyncResult OnBeginAddStudent(object[] inValues, System.AsyncCallback callback, object asyncState) {
            StudentAsyncClient.ServiceReference1.Student st = ((StudentAsyncClient.ServiceReference1.Student)(inValues[0]));
            return this.BeginAddStudent(st, callback, asyncState);
        }
        
        private object[] OnEndAddStudent(System.IAsyncResult result) {
            this.EndAddStudent(result);
            return null;
        }
        
        private void OnAddStudentCompleted(object state) {
            if ((this.AddStudentCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddStudentCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddStudentAsync(StudentAsyncClient.ServiceReference1.Student st) {
            this.AddStudentAsync(st, null);
        }
        
        public void AddStudentAsync(StudentAsyncClient.ServiceReference1.Student st, object userState) {
            if ((this.onBeginAddStudentDelegate == null)) {
                this.onBeginAddStudentDelegate = new BeginOperationDelegate(this.OnBeginAddStudent);
            }
            if ((this.onEndAddStudentDelegate == null)) {
                this.onEndAddStudentDelegate = new EndOperationDelegate(this.OnEndAddStudent);
            }
            if ((this.onAddStudentCompletedDelegate == null)) {
                this.onAddStudentCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddStudentCompleted);
            }
            base.InvokeAsync(this.onBeginAddStudentDelegate, new object[] {
                        st}, this.onEndAddStudentDelegate, this.onAddStudentCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<StudentAsyncClient.ServiceReference1.Student> GetStudents() {
            return base.Channel.GetStudents();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetStudents(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetStudents(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<StudentAsyncClient.ServiceReference1.Student> EndGetStudents(System.IAsyncResult result) {
            return base.Channel.EndGetStudents(result);
        }
        
        private System.IAsyncResult OnBeginGetStudents(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetStudents(callback, asyncState);
        }
        
        private object[] OnEndGetStudents(System.IAsyncResult result) {
            System.Collections.Generic.List<StudentAsyncClient.ServiceReference1.Student> retVal = this.EndGetStudents(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetStudentsCompleted(object state) {
            if ((this.GetStudentsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetStudentsCompleted(this, new GetStudentsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetStudentsAsync() {
            this.GetStudentsAsync(null);
        }
        
        public void GetStudentsAsync(object userState) {
            if ((this.onBeginGetStudentsDelegate == null)) {
                this.onBeginGetStudentsDelegate = new BeginOperationDelegate(this.OnBeginGetStudents);
            }
            if ((this.onEndGetStudentsDelegate == null)) {
                this.onEndGetStudentsDelegate = new EndOperationDelegate(this.OnEndGetStudents);
            }
            if ((this.onGetStudentsCompletedDelegate == null)) {
                this.onGetStudentsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetStudentsCompleted);
            }
            base.InvokeAsync(this.onBeginGetStudentsDelegate, null, this.onEndGetStudentsDelegate, this.onGetStudentsCompletedDelegate, userState);
        }
    }
}
